#!/bin/bash
# Runs the full OSM workflow in the current directory, or the one you provide,
# using the docker image.

workdir=${1:-$PWD}

mkdir -p "$workdir"

if ! docker images -q gentoo-local-osm | grep -q .; then
  docker pull gentoo/portage:latest
  docker pull gentoo/stage3-amd64:latest

  portage=`docker create -v /usr/portage gentoo/portage:latest /bin/true`
  gentoo=`docker run -d --volumes-from $portage gentoo/stage3-amd64:latest \
            /bin/bash -c '
              packages="perl net-misc/curl app-arch/lz4 app-arch/pbzip2
                        app-arch/xz coreutils dev-perl/Sys-Mmap"
              echo '\''CONFIG_PROTECT="-*"'\'' >> /etc/portage/make.conf
              echo '\''CPU_FLAGS_X86="mmxext sse3"'\'' >> /etc/portage/make.conf
              echo '\''CXXFLAGS="-O2 -march=native -mtune=native"'\'' >> /etc/portage/make.conf
              sed -ri '\''/^CFLAGS=/ {s/"$/ -march=native -mtune=native"/}'\'' /etc/portage/make.conf
              emerge --autounmask y --ask n --autounmask-write y $packages
              emerge $packages'`

  docker attach $gentoo
  docker commit $gentoo gentoo-local-osm
  docker rm $gentoo $portage
fi

docker build "$(dirname "$0")"
docker run --rm -v "$workdir:/data" $(docker build -q "$(dirname "$0")")
